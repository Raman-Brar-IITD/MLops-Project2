name: CI/CD Pipeline for AWS ECR and Hugging Face

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  # --------------------------
  # JOB 1: Build & Push Docker Image to AWS ECR
  # --------------------------
  build-and-push-ecr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc[s3]

      - name: Run DVC & Tests
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          dvc repro

      - name: Download NLTK Data and run tests
        run: |
          python -m nltk.downloader punkt averaged_perceptron_tagger stopwords wordnet omw-1.4
          python -m unittest discover -s tests -p "*.py"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build & Tag Docker Image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

  # --------------------------
  # JOB 2: Push Minimal Context to Hugging Face Space
  # --------------------------
  push-to-huggingface:
    runs-on: ubuntu-latest
    needs: build-and-push-ecr

    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - name: Push to Hugging Face Space (Docker)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git config --global user.email "gitAction@raman.com"
          git config --global user.name "Raman-GitAction"
          git lfs install --skip-smudge

          # Clone Hugging Face Space
          git clone https://user:$HF_TOKEN@huggingface.co/spaces/RamanSinghIITD/Sentiment-Analysis space_repo

          # Copy only necessary files for Docker build
          cp Dockerfile space_repo/
          cp requirements.txt space_repo/
          mkdir -p space_repo/flask_app && cp -r flask_app/* space_repo/flask_app/
          mkdir -p space_repo/models

          cd space_repo
          git add .
          git commit -m "Update Docker build context from GitHub Actions" || echo "No changes to commit"
          git push https://user:$HF_TOKEN@huggingface.co/spaces/RamanSinghIITD/Sentiment-Analysis main

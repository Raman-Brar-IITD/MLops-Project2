name: CI/CD Pipeline for AWS ECR and Hugging Face

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc[s3]

      # Run DVC and tests
      - name: Run DVC Pipeline and Tests
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          dvc repro
          python -m unittest discover -s tests -p "*.py"

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login to ECR
      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Build and tag Docker image
      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      # Push Docker image to ECR
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      # Push to Hugging Face Space
      - name: Push to Hugging Face Space (Docker)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git config --global user.email "gitAction@raman.com"
          git config --global user.name "Raman-GitAction"
          git lfs install --skip-smudge

          # Clone Space
          git clone https://huggingface.co/spaces/RamanSinghIITD/Sentiment-Analysis space_repo

          # Copy project files excluding Git history
          rsync -av --exclude='.git' --exclude='.github' ./ space_repo/

          cd space_repo
          git add .
          git commit -m "Update from GitHub Actions" || echo "No changes to commit"
          git push https://$HF_TOKEN@huggingface.co/spaces/RamanSinghIITD/Sentiment-Analysis main

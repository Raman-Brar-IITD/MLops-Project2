name: CI/CD Pipeline for AWS ECR and Hugging Face

on:
  push:
    branches:
      - main

jobs:
  # JOB 1: Test the code and push the image to AWS ECR
  build-and-push-to-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: pip install -r requirements.txt && pip install dvc[s3]

      - name: Run DVC Pipeline and Tests
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          dvc repro
          python -m unittest tests/test_model.py
          python -m unittest tests/test_flask_app.py

      - name: Login to AWS ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest


      - name: Push to Hugging Face Space (Docker)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git config --global user.email "gitAction@raman.com"
          git config --global user.name "Raman-GitAction"

          git lfs install

          # Clone your Hugging Face Space repo (Docker template)
          git clone https://huggingface.co/spaces/RamanSinghIITD/Sentiment-Analysis space_repo

          # Copy all project files (Dockerfile, app, etc.)
          cp -r ./* space_repo/

          cd space_repo
          git add .
          git commit -m "Update from GitHub Actions" || echo "No changes to commit"
          git push https://$HF_TOKEN@huggingface.co/spaces/RamanSinghIITD/Sentiment-Analysis main
